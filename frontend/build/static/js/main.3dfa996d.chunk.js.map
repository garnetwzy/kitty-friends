{"version":3,"sources":["Images/kitty-friends-logo.svg","Pages/LandingPage.js","Pages/SignInPage.js","Pages/RegisterPage.js","Components/Navigation.js","Components/Card.js","constants.js","Components/SearchBar.js","Components/Pagination.js","Pages/HomePage.js","Images/favicon.svg","Components/EmptyPagePlaceholder.js","Pages/MyCollectionsPage.js","Pages/MyPostsPage.js","Pages/PostCatPage.js","App.js","reportWebVitals.js","index.js"],"names":["particlesOption","particles","number","value","density","enable","color","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","LandingPage","className","params","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","to","src","logo","alt","SignInPage","useState","username","setUsername","password","setPassword","errorMsg","setErrorMsg","history","useHistory","evt","a","preventDefault","fetch","method","headers","body","JSON","stringify","resRaw","ok","json","msg","login","push","placeholder","onChange","target","htmlFor","onClick","RegisterPage","firstname","setFirstname","lastname","setLastname","passwordConfirm","setPasswordConfirm","isPasswordMatched","setIsPasswordMatched","register","name","onKeyUp","Navigation","location","useLocation","pathname","Card","props","cat","catId","handleUnsave","handleDelete","parentPage","isSaved","setIsSaved","cat_id","photo","age","gender","breed","email","phone","catBreeds","catAges","catSizes","catGenders","SearchBar","handleQueryBreed","handleQueryAge","handleQuerySize","handleQueryGender","handleSearchButtonClick","map","Pagination","numPages","currentPage","handlePageChange","aria-hidden","res","i","renderPageButtons","Homepage","cats","setCats","setCurrentPage","setNumPages","savedCats","setSavedCats","queryBreed","setQueryBreed","queryAge","setQueryAge","querySize","setQuerySize","queryGender","setQueryGender","reload","setReload","useEffect","status","savedIds","getSavedCats","window","scrollTo","getCats","_id","includes","page","EmptyPagePlaceholder","linkTo","linkToMsg","MyCollectionsPage","showPlaceholder","setShowPlaceholder","newCats","forEach","length","MyPostsPage","postedCats","setPostedCats","getPostedCats","config","bucketName","dirName","region","accessKeyId","env","S3_ACCESS_KEY_ID","secretAccessKey","S3_ACCESS_KEY","ReactS3Client","S3","PostCatPage","setBreed","setAge","setSize","setGender","setEmail","setPhone","setPhoto","showEmptyFieldErr","setShowEmptyFieldErr","showInvalidEmailErr","setShowInvalidEmailErr","showInvalidPhoneErr","setShowInvalidPhoneErr","showSuccessMsg","setShowSuccessMsg","showUploadFail","setShowUploadFail","files","validator","isEmail","isMobilePhone","uploadFile","then","data","photoUrl","catch","err","console","error","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dfa996d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kitty-friends-logo.055b73fe.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../Images/kitty-friends-logo.svg';\nimport Particles from 'react-particles-js';\nimport './LandingPage.css';\n\nconst particlesOption = {\n  particles: {\n    number: {\n      value: 160,\n      density: {\n        enable: false,\n      },\n    },\n    color: {\n      value: '#CF929E',\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        speed: 4,\n        size_min: 0.3,\n      },\n    },\n    line_linked: {\n      enable: false,\n    },\n    move: {\n      random: true,\n      speed: 1,\n      direction: 'top',\n      out_mode: 'out',\n    },\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: 'bubble',\n      },\n      onclick: {\n        enable: true,\n        mode: 'repulse',\n      },\n    },\n    modes: {\n      bubble: {\n        distance: 250,\n        duration: 2,\n        size: 0,\n        opacity: 0,\n      },\n      repulse: {\n        distance: 400,\n        duration: 4,\n      },\n    },\n  },\n};\nexport default function LandingPage() {\n  return (\n    <div>\n      <Particles className=\"particles\" params={particlesOption} />\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\n        <div className=\"container-fluid\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav ms-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/signin\">\n                  Sign In\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/register\">\n                  Register\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <div id=\"landing-page-container\">\n        <div id=\"landing-page-content\">\n          <img id=\"kitty-friends-logo\" src={logo} alt=\"Kitty Friends Logo\" />\n          <p id=\"landing-page-text\">\n            Kitty Friends is an online application for cats who need homes. At\n            Kitty Friends, pet lovers can search for a pet that best matches\n            their needs. They can then contact the owener using the email or\n            phone number for more details. Kitty Friends also allow users to\n            post cats and help them find a new home soon.{' '}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../Images/kitty-friends-logo.svg';\nimport './SigninRegisterPage.css';\n\nexport default function SignInPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const history = useHistory();\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    // clear error message\n    setErrorMsg('');\n\n    const resRaw = await fetch('/loginUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username: username, password: password }),\n    });\n\n    if (!resRaw.ok) {\n      const msg = await resRaw.json();\n      setErrorMsg(msg.login);\n    } else {\n      history.push('/home');\n    }\n  }\n\n  return (\n    <div>\n      <div id=\"sign-in-container\">\n        <div id=\"sign-in-content\">\n          <img src={logo} id=\"sign-in-logo\" alt=\"Kitty Friends Logo\" />\n          <p id=\"welcome-message\">Welcome Back</p>\n\n          <form>\n            <div className=\"form-floating mb-4 sign-in-input\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"usernameInput\"\n                placeholder=\"Username\"\n                onChange={(evt) => {\n                  setUsername(evt.target.value);\n                }}\n              />\n              <label htmlFor=\"usernameInput\">Username</label>\n            </div>\n            <div className=\"form-floating mb-4 sign-in-input\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"passwordInput\"\n                placeholder=\"Password\"\n                onChange={(evt) => {\n                  setPassword(evt.target.value);\n                }}\n              />\n              <label htmlFor=\"passwordInput\">Password</label>\n            </div>\n\n            {errorMsg && <p className=\"error-msg\">{errorMsg}</p>}\n\n            <button\n              className=\"btn btn-primary btn-lg\"\n              id=\"sign-in-button\"\n              onClick={handleSubmit}\n            >\n              Sign In\n            </button>\n          </form>\n\n          <div className=\"footer-text\">\n            <span>New user? </span>\n            <Link to=\"/register\">Register</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../Images/kitty-friends-logo.svg';\nimport './SigninRegisterPage.css';\n\nexport default function RegisterPage() {\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [isPasswordMatched, setIsPasswordMatched] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const history = useHistory();\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    // clear error message\n    setErrorMsg('');\n\n    if (!firstname || !lastname || !username || !password || !passwordConfirm) {\n      setErrorMsg('Please fill in all fields');\n    } else if (isPasswordMatched) {\n      const resRaw = await fetch('/registerUser', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n          firstname: firstname,\n          lastname: lastname,\n        }),\n      });\n\n      if (!resRaw.ok) {\n        const msg = await resRaw.json();\n        setErrorMsg(msg.register);\n      } else {\n        history.push('/home');\n      }\n    }\n  }\n\n  function handleOnKeyUp(evt) {\n    if (password && passwordConfirm && password !== passwordConfirm) {\n      setErrorMsg('Passwords do not match');\n      setIsPasswordMatched(false);\n    } else {\n      setErrorMsg('');\n      setIsPasswordMatched(true);\n    }\n  }\n\n  return (\n    <div>\n      <div id=\"register-container\">\n        <div id=\"register-content\">\n          <img src={logo} id=\"register-logo\" alt=\"Kitty Friends Logo\" />\n          <form>\n            <div className=\"form-floating mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"firstNameInput\"\n                name=\"first_name\"\n                placeholder=\"First Name\"\n                onChange={(evt) => {\n                  setFirstname(evt.target.value);\n                }}\n              />\n              <label htmlFor=\"firstNameInput\">First Name</label>\n            </div>\n\n            <div className=\"form-floating mb-3 register-input\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"lastNameInput\"\n                name=\"last_name\"\n                placeholder=\"Last Name\"\n                onChange={(evt) => {\n                  setLastname(evt.target.value);\n                }}\n              />\n              <label htmlFor=\"lastNameInput\">Last Name</label>\n            </div>\n\n            <div className=\"form-floating mb-3 register-input\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"usernameInput\"\n                placeholder=\"Username\"\n                onChange={(evt) => {\n                  setUsername(evt.target.value);\n                }}\n              />\n              <label htmlFor=\"usernameInput\">Username</label>\n            </div>\n\n            <div className=\"form-floating mb-3 register-input\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"passwordInput\"\n                placeholder=\"Password\"\n                onChange={(evt) => {\n                  setPassword(evt.target.value);\n                }}\n              />\n              <label htmlFor=\"passwordInput\">Password</label>\n            </div>\n\n            <div className=\"form-floating mb-3 register-input\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"passwordConfirmInput\"\n                placeholder=\"Confirm Password\"\n                onKeyUp={handleOnKeyUp}\n                onChange={(evt) => {\n                  setPasswordConfirm(evt.target.value);\n                }}\n              />\n              <label htmlFor=\"passwordConfirmInput\">Confirm Password</label>\n            </div>\n\n            {errorMsg && <p className=\"error-msg\">{errorMsg}</p>}\n\n            <button\n              className=\"btn btn-primary btn-lg\"\n              id=\"register-button\"\n              onClick={handleSubmit}\n            >\n              Register\n            </button>\n          </form>\n\n          <div className=\"footer-text\">\n            <span>Already have an account? </span>\n            <Link to=\"/signin\">Sign In</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport './Navigation.css';\n\nexport default function Navigation() {\n  const location = useLocation();\n  const history = useHistory();\n\n  async function handleLogOut() {\n    const resRaw = await fetch('/logoutUser');\n\n    if (resRaw.ok) {\n      history.push('/');\n    }\n  }\n\n  return (\n    <div className=\"navbar-container\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <Link\n            className={\n              'navbar-brand' + (location.pathname === '/home' ? ' active' : '')\n            }\n            to=\"/home\"\n          >\n            Kitty Friends\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navigation-bar\"\n            aria-controls=\"navigation-bar\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navigation-bar\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    'nav-link' +\n                    (location.pathname === '/myCollections' ? ' active' : '')\n                  }\n                  to=\"/myCollections\"\n                >\n                  My Collections\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    'nav-link' +\n                    (location.pathname === '/myPosts' ? ' active' : '')\n                  }\n                  to=\"/myPosts\"\n                >\n                  My Posts\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    'nav-link' +\n                    (location.pathname === '/postCat' ? ' active' : '')\n                  }\n                  to=\"/postCat\"\n                >\n                  Post A Cat\n                </Link>\n              </li>\n            </ul>\n            <ul className=\"navbar-nav ms-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"\" onClick={handleLogOut}>\n                  Log Out\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { SuitHeart, SuitHeartFill, Trash } from 'react-bootstrap-icons';\nimport PropTypes from 'prop-types';\nimport './Card.css';\n\nexport default function Card(props) {\n  const cat = props.cat;\n  const catId = props.id;\n  const handleUnsave = props.handleUnsave;\n  const handleDelete = props.handleDelete;\n  const parentPage = props.parentPage;\n\n  const [isSaved, setIsSaved] = useState(props.isSaved);\n\n  async function saveCat() {\n    const resRaw = await fetch('/saveCat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        cat_id: catId,\n      }),\n    });\n\n    if (resRaw.ok) {\n      setIsSaved(!isSaved);\n    }\n  }\n\n  async function unSaveCat() {\n    const resRaw = await fetch('/unsaveCat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        cat_id: catId,\n      }),\n    });\n\n    if (resRaw.ok) {\n      setIsSaved(!isSaved);\n\n      if (parentPage === 'MyCollectionsPage') {\n        handleUnsave(catId);\n      }\n    }\n  }\n\n  async function deleteCat() {\n    const resRaw = await fetch('/deletePost', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        cat_id: catId,\n      }),\n    });\n\n    if (resRaw.ok) {\n      if (parentPage === 'MyPostsPage') {\n        handleDelete(catId);\n      }\n    }\n  }\n\n  return (\n    <div className=\"card border-light m-3\">\n      <img src={cat.photo} className=\"card-img-top cat-pic\" alt=\"...\" />\n      <div className=\"card-body shadow\">\n        <div className=\"card-text\">Age: {cat.age}</div>\n        <div className=\"card-text\">Gender: {cat.gender}</div>\n        <div className=\"card-text\">Size: {cat.size}</div>\n        <div className=\"card-text\">Breed: {cat.breed}</div>\n        <div className=\"card-text\">\n          Email: {cat.email ? cat.email : 'default@gmail.com'}\n        </div>\n        <div className=\"card-text\">\n          Phone: {cat.phone ? cat.phone : '666-777-8888'}\n        </div>\n        {parentPage === 'MyPostsPage' && (\n          <Trash\n            className=\"me-1 float-end action-icon trash\"\n            onClick={deleteCat}\n          />\n        )}\n        {parentPage !== 'MyPostsPage' && isSaved && (\n          <SuitHeartFill\n            className=\"me-1 float-end action-icon heart-fill\"\n            onClick={unSaveCat}\n          />\n        )}\n\n        {parentPage !== 'MyPostsPage' && !isSaved && (\n          <SuitHeart\n            className=\"me-1 float-end action-icon heart\"\n            onClick={saveCat}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  cat: PropTypes.object,\n  catId: PropTypes.string,\n  parentPage: PropTypes.string,\n  handleUnsave: PropTypes.func,\n  handleDelete: PropTypes.func,\n};\n","export const catBreeds = [\n  'Persian',\n  'American Shorthair',\n  'Siamese',\n  'Domestic Long Hair',\n  'Domestic Short Hair',\n  'Domestic Medium Hair',\n  'Snowshoe',\n  'Dilute Tortoiseshell',\n  'Dilute Calico',\n  'Russian Blue',\n  'Maine Coon',\n  'Calico',\n  'Tabby',\n  'Tiger',\n  'Bengal',\n  'Turkish Angora',\n  'Turkish Van',\n  'Tuxedo',\n  'Torbie',\n  'Bombay',\n  'Devon Rex',\n  'Tortoiseshell',\n  'Ragdoll',\n  'Abyssinian',\n  'Havana',\n  'Exotic Shorthair',\n  'Egyptian Mau',\n  'Burmese',\n  'Birman',\n  'Tonkinese',\n  'Balinese',\n  'Chausie',\n  'Himalayan',\n  'American Bobtail',\n  'Manx',\n  'Ragamuffin',\n  'Norwegian Forest Cat',\n  'Scottish Fold',\n  'Siberian',\n];\n\nexport const catAges = ['Baby', 'Young', 'Adult', 'Senior'];\n\nexport const catSizes = ['Small', 'Medium', 'Large', 'Extra Large'];\n\nexport const catGenders = ['Female', 'Male'];\n","import React from 'react';\nimport { catBreeds, catAges, catSizes, catGenders } from '../constants.js';\nimport PropTypes from 'prop-types';\nimport './SearchBar.css';\n\nexport default function SearchBar(props) {\n  const handleQueryBreed = props.handleQueryBreed;\n  const handleQueryAge = props.handleQueryAge;\n  const handleQuerySize = props.handleQuerySize;\n  const handleQueryGender = props.handleQueryGender;\n  const handleSearchButtonClick = props.handleSearchButtonClick;\n\n  return (\n    <div className=\"search-container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"mb-3 col-md-4 col-lg-3\">\n          <select\n            className=\"form-select\"\n            name=\"breed\"\n            onChange={(evt) => {\n              handleQueryBreed(evt.target.value);\n            }}\n          >\n            <option value=\"\">Breed</option>\n            {catBreeds.map((breed) => (\n              <option key={breed} value={breed}>\n                {breed}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mb-3 col-md-3 col-lg-2\">\n          <select\n            className=\"form-select\"\n            name=\"age\"\n            onChange={(evt) => {\n              handleQueryAge(evt.target.value);\n            }}\n          >\n            <option value=\"\">Age</option>\n            {catAges.map((age) => (\n              <option key={age} value={age}>\n                {age}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mb-3 col-md-3 col-lg-2\">\n          <select\n            className=\"form-select\"\n            name=\"size\"\n            onChange={(evt) => {\n              handleQuerySize(evt.target.value);\n            }}\n          >\n            <option value=\"\">Size</option>\n            {catSizes.map((size) => (\n              <option key={size} value={size}>\n                {size}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mb-3 col-md-3 col-lg-2\">\n          <select\n            className=\"form-select\"\n            name=\"gender\"\n            onChange={(evt) => {\n              handleQueryGender(evt.target.value);\n            }}\n          >\n            <option value=\"\">Gender</option>\n            {catGenders.map((gender) => (\n              <option key={gender} value={gender}>\n                {gender}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"mb-3 col-12 col-md-1 col-lg-1\">\n          <button className=\"btn btn-primary\" onClick={handleSearchButtonClick}>\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  handleQueryBreed: PropTypes.func,\n  handleQueryAge: PropTypes.func,\n  handleQuerySize: PropTypes.func,\n  handleQueryGender: PropTypes.func,\n  handleSearchButtonClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Pagination.css';\n\nconst NUM_BUTTONS = 5;\n\nexport default function Pagination({\n  numPages,\n  currentPage,\n  handlePageChange,\n}) {\n  const renderPageButtons = () => {\n    const res = [];\n    // Less than 5 pages\n    if (numPages <= NUM_BUTTONS) {\n      for (let i = 1; i < numPages - 1; i += 1) {\n        res.push(\n          <li\n            key={'page' + i}\n            className={'page-item' + (currentPage === i ? ' active' : '')}\n          >\n            <button className=\"page-link\" onClick={() => handlePageChange(i)}>\n              {i + 1}\n            </button>\n          </li>\n        );\n      }\n    }\n    // More than 5 pages\n    else {\n      if (currentPage < 3) {\n        res.push(\n          <li\n            key=\"page1\"\n            className={'page-item' + (currentPage === 1 ? ' active' : '')}\n          >\n            <button className=\"page-link\" onClick={() => handlePageChange(1)}>\n              2\n            </button>\n          </li>\n        );\n        res.push(\n          <li\n            key=\"page2\"\n            className={'page-item' + (currentPage === 2 ? ' active' : '')}\n          >\n            <button className=\"page-link\" onClick={() => handlePageChange(2)}>\n              3\n            </button>\n          </li>\n        );\n      }\n      if (currentPage >= 3) {\n        res.push(\n          <li className=\"page-item disabled\" key=\"dots1\">\n            <button className=\"page-link\">...</button>\n          </li>\n        );\n      }\n      if (currentPage >= 3 && currentPage < numPages - 3) {\n        res.push(\n          <li className=\"page-item active\" key={'page' + currentPage}>\n            <button\n              className=\"page-link\"\n              onClick={() => handlePageChange(currentPage)}\n            >\n              {currentPage + 1}\n            </button>\n          </li>\n        );\n      }\n      if (currentPage < 3 || (currentPage >= 3 && currentPage < numPages - 3)) {\n        res.push(\n          <li className=\"page-item disabled\" key=\"dots2\">\n            <button className=\"page-link\">...</button>\n          </li>\n        );\n      }\n      if (currentPage >= numPages - 3) {\n        res.push(\n          <li\n            className={\n              'page-item' + (currentPage === numPages - 3 ? ' active' : '')\n            }\n            key={'page' + (numPages - 3)}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => handlePageChange(numPages - 3)}\n            >\n              {numPages - 2}\n            </button>\n          </li>\n        );\n        res.push(\n          <li\n            className={\n              'page-item' + (currentPage === numPages - 2 ? ' active' : '')\n            }\n            key={'page' + (numPages - 2)}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => handlePageChange(numPages - 2)}\n            >\n              {numPages - 1}\n            </button>\n          </li>\n        );\n      }\n    }\n\n    return res;\n  };\n\n  return (\n    <nav\n      className=\"pagination-container m-3\"\n      aria-label=\"Page navigation example\"\n    >\n      <ul className=\"pagination\">\n        <li\n          className={'page-item' + (currentPage === 0 ? ' disabled' : '')}\n          key=\"previous\"\n        >\n          <span\n            className=\"page-link\"\n            aria-hidden=\"true\"\n            onClick={() => handlePageChange(currentPage - 1)}\n          >\n            &laquo;\n          </span>\n        </li>\n\n        <li\n          className={'page-item' + (currentPage === 0 ? ' active' : '')}\n          key=\"page0\"\n        >\n          <button className=\"page-link\" onClick={() => handlePageChange(0)}>\n            1\n          </button>\n        </li>\n\n        {renderPageButtons()}\n\n        <li\n          className={\n            'page-item' + (currentPage === numPages - 1 ? ' active' : '')\n          }\n          key={'page' + (numPages - 1)}\n        >\n          <button\n            className=\"page-link\"\n            onClick={() => handlePageChange(numPages - 1)}\n          >\n            {numPages}\n          </button>\n        </li>\n\n        <li\n          className={\n            'page-item' + (currentPage === numPages - 1 ? ' disabled' : '')\n          }\n          key=\"next\"\n        >\n          <span\n            className=\"page-link\"\n            aria-hidden=\"true\"\n            onClick={() => handlePageChange(currentPage + 1)}\n          >\n            &raquo;\n          </span>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nPagination.propTypes = {\n  numPages: PropTypes.number,\n  currentPage: PropTypes.number,\n  handlePageChange: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Navigation from '../Components/Navigation.js';\nimport Card from '../Components/Card.js';\nimport SearchBar from '../Components/SearchBar.js';\nimport Pagination from '../Components/Pagination.js';\n\nexport default function Homepage() {\n  const [cats, setCats] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [numPages, setNumPages] = useState(0);\n  const [savedCats, setSavedCats] = useState([]);\n\n  // states for search cats\n  const [queryBreed, setQueryBreed] = useState('');\n  const [queryAge, setQueryAge] = useState('');\n  const [querySize, setQuerySize] = useState('');\n  const [queryGender, setQueryGender] = useState('');\n  const [reload, setReload] = useState(0);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getSavedCats = async () => {\n      const resRaw = await fetch('/getSavedIds');\n      const res = await resRaw.json();\n\n      if (resRaw.status === 401) {\n        history.push('/');\n      }\n\n      setSavedCats(res.savedIds);\n    };\n\n    getSavedCats();\n  }, [currentPage, history]);\n\n  useEffect(() => {\n    const getCats = async () => {\n      const resRaw = await fetch(\n        `/getCats?page=${currentPage}&breed=${queryBreed}&age=${queryAge}&size=${querySize}&gender=${queryGender}`\n      );\n      const res = await resRaw.json();\n\n      if (resRaw.status === 401) {\n        history.push('/');\n      }\n\n      setCats(res.cats);\n      setNumPages(res.numPages);\n\n      // automatically scroll to the top of the page\n      window.scrollTo(0, 0);\n    };\n\n    getCats();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, reload, history]);\n\n  function handlePageChange(page) {\n    setCurrentPage(page);\n  }\n\n  function handleQueryBreed(breed) {\n    setQueryBreed(breed);\n  }\n\n  function handleQueryAge(age) {\n    setQueryAge(age);\n  }\n\n  function handleQuerySize(size) {\n    setQuerySize(size);\n  }\n\n  function handleQueryGender(gender) {\n    setQueryGender(gender);\n  }\n\n  function handleSearchButtonClick() {\n    setReload(reload + 1);\n  }\n\n  return (\n    <div>\n      <Navigation />\n      <div className=\"content-container\">\n        <SearchBar\n          handleQueryBreed={handleQueryBreed}\n          handleQueryAge={handleQueryAge}\n          handleQuerySize={handleQuerySize}\n          handleQueryGender={handleQueryGender}\n          handleSearchButtonClick={handleSearchButtonClick}\n        />\n\n        <div className=\"d-flex flex-wrap justify-content-center\">\n          {cats.map((cat) => (\n            <Card\n              cat={cat}\n              key={cat._id}\n              id={cat._id}\n              isSaved={savedCats.includes(cat._id)}\n            />\n          ))}\n        </div>\n\n        {numPages > 1 && (\n          <Pagination\n            numPages={numPages}\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/favicon.b0ed1dd3.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../Images/favicon.svg';\nimport PropTypes from 'prop-types';\nimport './EmptyPagePlaceholder.css';\n\nexport default function EmptyPagePlaceholder({ msg, linkTo, linkToMsg }) {\n  return (\n    <div className=\"placeholder-container\">\n      <img className=\"placeholder-logo\" src={logo} alt=\"Kitty Friends Logo\" />\n      <span className=\"placeholder-msg\">{msg}</span>\n      <Link className=\"btn btn-primary placeholder-link\" to={linkTo}>\n        {linkToMsg}\n      </Link>\n    </div>\n  );\n}\n\nEmptyPagePlaceholder.propTypes = {\n  msg: PropTypes.string,\n  linkTo: PropTypes.string,\n  linkToMsg: PropTypes.string,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Card from '../Components/Card.js';\nimport Navigation from '../Components/Navigation.js';\nimport Pagination from '../Components/Pagination.js';\nimport EmptyPagePlaceholder from '../Components/EmptyPagePlaceholder.js';\n\nexport default function MyCollectionsPage() {\n  const [savedCats, setSavedCats] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [numPages, setNumPages] = useState(0);\n  const [showPlaceholder, setShowPlaceholder] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getSavedCats = async () => {\n      setShowPlaceholder(false);\n\n      const resRaw = await fetch(`/getCollections?page=${currentPage}`);\n      const res = await resRaw.json();\n\n      if (resRaw.status === 401) {\n        history.push('/');\n        return;\n      }\n\n      setSavedCats(res.cats);\n      setNumPages(res.numPages);\n\n      if (res.cats.length === 0) {\n        setShowPlaceholder(true);\n      }\n\n      // automatically scroll to the top of the page\n      window.scrollTo(0, 0);\n    };\n\n    getSavedCats();\n  }, [currentPage, history]);\n\n  function handleUnsave(catId) {\n    const newCats = [];\n    savedCats.forEach((cat) => {\n      if (cat._id !== catId) {\n        newCats.push(cat);\n      }\n    });\n    setSavedCats(newCats);\n\n    // if we remove the last one on the current page, direct to the previous page\n    if (newCats.length === 0) {\n      // current page is the first page = we remove the last item, show the empty page placeholder\n      if (currentPage === 0) {\n        setNumPages(0);\n        setShowPlaceholder(true);\n      } else {\n        setCurrentPage(currentPage - 1);\n        setNumPages(0);\n      }\n    }\n  }\n\n  function handlePageChange(page) {\n    setCurrentPage(page);\n  }\n\n  return (\n    <div>\n      <Navigation />\n      <div className=\"content-container\">\n        {showPlaceholder && (\n          <EmptyPagePlaceholder\n            msg=\"You haven't saved any furry friends yet.\"\n            linkTo=\"/home\"\n            linkToMsg=\"Explore\"\n          />\n        )}\n        <div className=\"d-flex flex-wrap justify-content-center\">\n          {savedCats.map((cat) => (\n            <Card\n              cat={cat}\n              key={cat._id}\n              id={cat._id}\n              isSaved={true}\n              handleUnsave={handleUnsave}\n              parentPage={'MyCollectionsPage'}\n            />\n          ))}\n        </div>\n\n        {numPages > 1 && (\n          <Pagination\n            numPages={numPages}\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Card from '../Components/Card.js';\nimport Navigation from '../Components/Navigation.js';\nimport Pagination from '../Components/Pagination.js';\nimport EmptyPagePlaceholder from '../Components/EmptyPagePlaceholder.js';\n\nexport default function MyPostsPage() {\n  const [postedCats, setPostedCats] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [numPages, setNumPages] = useState(0);\n  const [showPlaceholder, setShowPlaceholder] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getPostedCats = async () => {\n      setShowPlaceholder(false);\n\n      const resRaw = await fetch(`/getPosts?page=${currentPage}`);\n      const res = await resRaw.json();\n\n      if (resRaw.status === 401) {\n        history.push('/');\n      }\n\n      setPostedCats(res.cats);\n      setNumPages(res.numPages);\n\n      if (res.cats.length === 0) {\n        setShowPlaceholder(true);\n      }\n\n      // automatically scroll to the top of the page\n      window.scrollTo(0, 0);\n    };\n\n    getPostedCats();\n  }, [currentPage, history]);\n\n  function handlePageChange(page) {\n    setCurrentPage(page);\n  }\n\n  function handleDelete(catId) {\n    const newCats = [];\n    postedCats.forEach((cat) => {\n      if (cat._id !== catId) {\n        newCats.push(cat);\n      }\n    });\n    setPostedCats(newCats);\n\n    // if we remove the last one on the current page, direct to the previous page\n    if (newCats.length === 0) {\n      // current page is the first page = we remove the last item, show the empty page placeholder\n      if (currentPage === 0) {\n        setNumPages(0);\n        setShowPlaceholder(true);\n      } else {\n        setCurrentPage(currentPage - 1);\n        setNumPages(0);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Navigation />\n      <div className=\"content-container\">\n        {showPlaceholder && (\n          <EmptyPagePlaceholder\n            msg=\"You haven't posted any furry friends yet.\"\n            linkTo=\"/postCat\"\n            linkToMsg=\"Post A Cat\"\n          />\n        )}\n        <div className=\"d-flex flex-wrap justify-content-center\">\n          {postedCats.map((cat) => (\n            <Card\n              cat={cat}\n              key={cat._id}\n              id={cat._id}\n              parentPage={'MyPostsPage'}\n              handleDelete={handleDelete}\n            />\n          ))}\n        </div>\n\n        {numPages > 1 && (\n          <Pagination\n            numPages={numPages}\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport S3 from 'react-aws-s3';\nimport env from 'react-dotenv';\nimport Navigation from '../Components/Navigation.js';\nimport { catBreeds, catAges, catSizes, catGenders } from '../constants.js';\nimport validator from 'validator';\nimport './PostCatPage.css';\n\n// connect to AWS S3 for uploading cat images\nconst config = {\n  bucketName: 'kitty-friends-bucket',\n  dirName: 'media' /* optional */,\n  region: 'us-west-1',\n  accessKeyId: env.S3_ACCESS_KEY_ID,\n  secretAccessKey: env.S3_ACCESS_KEY,\n};\n\nconst ReactS3Client = new S3(config);\n\nexport default function PostCatPage() {\n  const [breed, setBreed] = useState('');\n  const [age, setAge] = useState('');\n  const [size, setSize] = useState('');\n  const [gender, setGender] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [showEmptyFieldErr, setShowEmptyFieldErr] = useState(false);\n  const [showInvalidEmailErr, setShowInvalidEmailErr] = useState(false);\n  const [showInvalidPhoneErr, setShowInvalidPhoneErr] = useState(false);\n  const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n  const [showUploadFail, setShowUploadFail] = useState(false);\n\n  function handlePost() {\n    if (breed && age && size && gender && email && phone && photo) {\n      // Validate email\n      if (!validator.isEmail(email)) {\n        setShowInvalidEmailErr(true);\n      }\n      // validate phone\n      else if (!validator.isMobilePhone(phone, 'en-US')) {\n        setShowInvalidPhoneErr(true);\n      } else {\n        // upload photo to aws s3 and store to db\n        ReactS3Client.uploadFile(photo)\n          .then(async (data) => {\n            const photoUrl = data.location;\n            const resRaw = await fetch('/postCat', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                breed: breed,\n                age: age,\n                size: size,\n                gender: gender,\n                email: email,\n                phone: phone,\n                photo: photoUrl,\n              }),\n            });\n\n            if (resRaw.ok) {\n              setShowSuccessMsg(true);\n            } else {\n              setShowUploadFail(true);\n            }\n          })\n          .catch((err) => console.error(err));\n      }\n    } else {\n      setShowEmptyFieldErr(true);\n    }\n  }\n\n  return (\n    <div>\n      <Navigation />\n      <div className=\"post-container\">\n        <div className=\"post-content cat-input\">\n          <h4 id=\"post-info-title\">Post a cat for adoption</h4>\n\n          <div className=\"input-group mb-4\">\n            <label htmlFor=\"breedInput\" className=\"form-label post-label\">\n              Breed\n            </label>\n            <select\n              className=\"form-select\"\n              name=\"breed\"\n              id=\"breedInput\"\n              onChange={(evt) => {\n                setBreed(evt.target.value);\n                setShowEmptyFieldErr(false);\n                setShowInvalidEmailErr(false);\n                setShowInvalidPhoneErr(false);\n                setShowSuccessMsg(false);\n                setShowUploadFail(false);\n              }}\n            >\n              <option value=\"\"> </option>\n              {catBreeds.map((breed) => (\n                <option key={breed} value={breed}>\n                  {breed}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"input-group mb-4\">\n            <label htmlFor=\"ageInput\" className=\"form-label post-label\">\n              Age\n            </label>\n            <select\n              className=\"form-select\"\n              name=\"age\"\n              id=\"ageInput\"\n              onChange={(evt) => {\n                setAge(evt.target.value);\n                setShowEmptyFieldErr(false);\n                setShowInvalidEmailErr(false);\n                setShowInvalidPhoneErr(false);\n                setShowSuccessMsg(false);\n                setShowUploadFail(false);\n              }}\n            >\n              <option value=\"\"> </option>\n              {catAges.map((age) => (\n                <option key={age} value={age}>\n                  {age}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"input-group mb-4\">\n            <label htmlFor=\"sizeInput\" className=\"form-label post-label\">\n              Size\n            </label>\n            <select\n              className=\"form-select\"\n              name=\"size\"\n              id=\"sizeInput\"\n              onChange={(evt) => {\n                setSize(evt.target.value);\n                setShowEmptyFieldErr(false);\n                setShowInvalidEmailErr(false);\n                setShowInvalidPhoneErr(false);\n                setShowSuccessMsg(false);\n                setShowUploadFail(false);\n              }}\n            >\n              <option value=\"\"> </option>\n              {catSizes.map((size) => (\n                <option key={size} value={size}>\n                  {size}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"input-group mb-4\">\n            <label htmlFor=\"genderInput\" className=\"form-label post-label\">\n              Gender\n            </label>\n            <select\n              className=\"form-select\"\n              name=\"gender\"\n              id=\"genderInput\"\n              onChange={(evt) => {\n                setGender(evt.target.value);\n                setShowEmptyFieldErr(false);\n                setShowInvalidEmailErr(false);\n                setShowInvalidPhoneErr(false);\n                setShowSuccessMsg(false);\n                setShowUploadFail(false);\n              }}\n            >\n              <option value=\"\"> </option>\n              {catGenders.map((gender) => (\n                <option key={gender} value={gender}>\n                  {gender}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"input-group mb-4\">\n            <label htmlFor=\"emailInput\" className=\"form-label post-label\">\n              Email\n            </label>\n            <input\n              className=\"form-control\"\n              type=\"email\"\n              name=\"email\"\n              id=\"emailInput\"\n              onChange={(evt) => {\n                setEmail(evt.target.value);\n                setShowEmptyFieldErr(false);\n                setShowInvalidEmailErr(false);\n                setShowInvalidPhoneErr(false);\n                setShowSuccessMsg(false);\n                setShowUploadFail(false);\n              }}\n            />\n          </div>\n\n          <div className=\"input-group mb-4\">\n            <label htmlFor=\"phoneInput\" className=\"form-label post-label\">\n              Phone\n            </label>\n            <input\n              className=\"form-control\"\n              type=\"phone\"\n              name=\"phone\"\n              id=\"phoneInput\"\n              onChange={(evt) => {\n                setPhone(evt.target.value);\n                setShowEmptyFieldErr(false);\n                setShowInvalidEmailErr(false);\n                setShowInvalidPhoneErr(false);\n                setShowSuccessMsg(false);\n                setShowUploadFail(false);\n              }}\n            />\n          </div>\n\n          <div className=\"input-group mb-4\">\n            <label className=\"form-label post-label\" htmlFor=\"catPhotoFile\">\n              Cat Photo\n            </label>\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              id=\"catPhotoFile\"\n              onChange={(evt) => {\n                setPhoto(evt.target.files[0]);\n                setShowEmptyFieldErr(false);\n                setShowInvalidEmailErr(false);\n                setShowInvalidPhoneErr(false);\n                setShowSuccessMsg(false);\n                setShowUploadFail(false);\n              }}\n            />\n          </div>\n\n          <button className=\"btn btn-primary post-button\" onClick={handlePost}>\n            Submit\n          </button>\n\n          {showEmptyFieldErr && (\n            <div className=\"m-3 error-msg\">Please fill in all the fields.</div>\n          )}\n\n          {showInvalidEmailErr && (\n            <div className=\"m-3 error-msg\">Please enter a valid email.</div>\n          )}\n\n          {showInvalidPhoneErr && (\n            <div className=\"m-3 error-msg\">\n              Please enter a valid phone number.\n            </div>\n          )}\n\n          {showSuccessMsg && <div className=\"m-3\">Successfully uploaded!</div>}\n\n          {showUploadFail && (\n            <div className=\"m-3 error-msg\">\n              Fail to upload. Please wait for us to fix the error and try again\n              later.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport LandingPage from './Pages/LandingPage.js';\nimport SignInPage from './Pages/SignInPage.js';\nimport RegisterPage from './Pages/RegisterPage.js';\nimport HomePage from './Pages/HomePage.js';\nimport MyCollectionsPage from './Pages/MyCollectionsPage.js';\nimport MyPostsPage from './Pages/MyPostsPage.js';\nimport PostCatPage from './Pages/PostCatPage.js';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/signin\">\n          <SignInPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route path=\"/home\">\n          <HomePage />\n        </Route>\n        <Route path=\"/myCollections\">\n          <MyCollectionsPage />\n        </Route>\n        <Route path=\"/myPosts\">\n          <MyPostsPage />\n        </Route>\n        <Route path=\"/postCat\">\n          <PostCatPage />\n        </Route>\n        <Route path=\"/\">\n          <LandingPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}